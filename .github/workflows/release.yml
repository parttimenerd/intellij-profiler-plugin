name: Release on pluginVersion Change

on:
  push:
    paths:
      - 'gradle.properties'
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Extract pluginVersion from gradle.properties
        id: get_version
        run: |
          version=$(grep '^pluginVersion' gradle.properties | cut -d'=' -f2 | xargs)
          echo "pluginVersion=$version" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          git fetch --tags
          if git rev-parse "v${{ steps.get_version.outputs.pluginVersion }}" >/dev/null 2>&1; then
            echo "Tag exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag and push
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.get_version.outputs.pluginVersion }}
          git push origin v${{ steps.get_version.outputs.pluginVersion }}

      # Build the plugin and prepare the artifact for the next steps
      - name: Build Plugin
        run: ./gradlew buildPlugin

      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content

          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          version="${{ steps.get_version.outputs.pluginVersion }}"
          awk -v ver="$version" '
            BEGIN {found=0}
            /^## \[/ {
              if (found) exit
              if ($2 == "["ver"]") found=1
            }
            found && !/^## \[/ {print}
          ' CHANGELOG.md | sed '/^$/d' > _release_changelog.txt
          echo 'changelog<<EOF' >> $GITHUB_OUTPUT
          cat _release_changelog.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.pluginVersion }}
          name: Release v${{ steps.get_version.outputs.pluginVersion }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: |
            ./build/distributions/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}