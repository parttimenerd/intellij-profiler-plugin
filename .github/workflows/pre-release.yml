name: Pre-Release (only if version did not change)

on:
  push:
    branches:
      - main

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract pluginVersion from gradle.properties
        id: get_version
        run: |
          version=$(grep '^pluginVersion' gradle.properties | cut -d'=' -f2 | xargs)
          echo "pluginVersion=$version" >> $GITHUB_OUTPUT

      - name: Fetch latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --list 'v*' --sort=-v:refname | head -n1 | sed 's/^v//')
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Check if version matches latest tag
        id: check_version
        run: |
          if [ "${{ steps.get_version.outputs.pluginVersion }}" = "${{ steps.get_tag.outputs.latest_tag }}" ]; then
            echo "match=true" >> $GITHUB_OUTPUT
          else
            echo "match=false" >> $GITHUB_OUTPUT
          fi

      - name: Run pre-release steps
        if: steps.check_version.outputs.match == 'true'
        run: |
          echo "Running pre-release steps because version did not change."
          # Add your pre-release steps here

      - name: Skip pre-release steps
        if: steps.check_version.outputs.match != 'true'
        run: |
          echo "Skipping pre-release steps because version changed."
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup Java JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # Build the plugin and prepare the artifact for the next steps
      - name: Build Plugin
        run: ./gradlew buildPlugin

      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content

          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      # Store already-built plugin as an artifact for downloading
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/*
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE
            ./build/distributions/*